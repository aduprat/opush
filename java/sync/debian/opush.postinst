#!/bin/bash
set -e

# Disable output redirection
#DEBCONF_REDIR=0

# Source debconf library.
. /usr/share/debconf/confmodule

is_initial_configuration() {
 # Check if this is the initial configuration and not an upgrade of an 
 # existing configuration 
 # Usage: if is_initial_configuration "$@"; then ... fi from top level 

 # Plain installation 
  if [ "$1" = configure ] && [ -z "$2" ]; then
    return 0
  fi
 # Configuration via dpkg-reconfigure 
  if [ "$1" = reconfigure ] || [ "$DEBCONF_RECONFIGURE" ]; then
    return 0
  fi
  return 1
}
rm -rf /var/lib/opush/org.*

if is_initial_configuration "$@"; then
  echo "Create configfile for OBM Opush server in /etc/opush..."
  cat > /etc/opush/mem_conf.ini <<EOF
OBM Opush Memory configuration
Please set here memory use by Opush Server in Mo
MEM=128
EOF
fi

TEMPDIR=/var/run/opush/upgrades
NEWFILE=${TEMPDIR}/sync_perms.ini
CONFIG=/etc/opush/sync_perms.ini

mkdir -p "${TEMPDIR}"
TEMPLATE=/usr/share/o-push/debian-conf/sync_perms.ini
cp "${TEMPLATE}" "${NEWFILE}"

db_get opush/syncperms || true
perms="$RET"
sed -i -e "s/\(allow.unknown.pda\).*/\1=${perms}/" ${NEWFILE}
ucf --three-way --debconf-ok "$NEWFILE" "$CONFIG"
ucfr opush "${CONFIG}"


NEWFILE=${TEMPDIR}/ldap_conf.ini
CONFIG=/etc/opush/ldap_conf.ini
TEMPLATE=/usr/share/o-push/debian-conf/ldap_conf.ini
cp "${TEMPLATE}" "${NEWFILE}"
db_get obm-conf/ldapserver || true
ldapserver="$RET"
sed -i -e "s%\(search.ldap.url\).*%\1=${ldapserver}%" ${NEWFILE}
ucf --three-way --debconf-ok "$NEWFILE" "$CONFIG"
ucfr opush "${CONFIG}"

NEWFILE=${TEMPDIR}/mail_conf.ini
CONFIG=/etc/opush/mail_conf.ini
TEMPLATE=/usr/share/o-push/debian-conf/mail_conf.ini
cp "${TEMPLATE}" "${NEWFILE}"
ucf --three-way --debconf-ok "$NEWFILE" "$CONFIG"
ucfr opush "${CONFIG}"

NEWFILE=${TEMPDIR}/remote_console.ini
CONFIG=/etc/opush/remote_console.ini
TEMPLATE=/usr/share/o-push/debian-conf/remote_console.ini
cp "${TEMPLATE}" "${NEWFILE}"
ucf --three-way --debconf-ok "$NEWFILE" "$CONFIG"
ucfr opush "${CONFIG}"

NEWFILE=${TEMPDIR}/policy.ini
CONFIG=/etc/opush/policy.ini
TEMPLATE=/usr/share/o-push/debian-conf/policy.ini
cp "${TEMPLATE}" "${NEWFILE}"
ucf --three-way --debconf-ok "$NEWFILE" "$CONFIG"
ucfr opush "${CONFIG}"

NEWFILE=${TEMPDIR}/cassandra.ini
CONFIG=/etc/opush/cassandra.ini
TEMPLATE=/usr/share/o-push/debian-conf/cassandra.ini
cp "${TEMPLATE}" "${NEWFILE}"
ucf --three-way --debconf-ok "$NEWFILE" "$CONFIG"
ucfr opush "${CONFIG}"

[ ! -f /etc/opush/logback.xml ] && echo "<included/>" > /etc/opush/logback.xml

invoke-rc.d jetty status 3>1
jetty_status=$?

if [ -d /var/log/opush ]; then 
    chown -R jetty:adm /var/log/opush
else
    echo "error : /var/log/opush must exist."
    exit 1
fi 

if [ -d /var/lib/opush ]; then
    chown -R jetty:adm /var/lib/opush
else
    echo "error : /var/lib/opush must exist."
    exit 1
fi


if [ $jetty_status -eq 0 ]; then
	invoke-rc.d jetty restart	 3>1
elif [ $jetty_status -ne 3 ]; then
	echo "Jetty not correctly shutdown.\nPlease restart it manually to start using the opush webapp.\n"
else
	invoke-rc.d jetty start 3>1
fi
[ -f /etc/init.d/opush ] && rm -f /etc/init.d/opush

ln -s /etc/init.d/jetty /etc/init.d/opush

#DEBHELPER#

exit 0

