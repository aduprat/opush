#!/bin/bash -e

. /usr/share/debconf/confmodule

db_input high obm-conf/dbhost || true
db_input high obm-conf/dbtype || true
db_input high obm-conf/dbname || true
db_input high obm-conf/dbuser || true
db_input high obm-conf/ldapserver || true
db_input high obm-conf/externalurl || true
db_go || true

check_alphanumeric() {
  DB_RET=$1
  KEY=$2
  while [[ -z "$DB_RET" || $(echo $DB_RET | tr -d '[:alnum:]') ]] ; do
    db_input high obm-conf/${KEY} || true
    db_go || true 
    db_get obm-conf/${KEY} || true
    DB_RET="$RET"
  done
}

QUESTION_NOT_SHOWN_TO_USER=30
while [ ! ${have_app_pass} ] ; do
    #get password
    set +e
    db_input high obm-conf/dbpasswd
    if [ $? -eq $QUESTION_NOT_SHOWN_TO_USER ]; then
      break
    fi
    set -e
    db_go || true
    db_get obm-conf/dbpasswd || true
    DB_RET="$RET"
    check_alphanumeric $DB_RET "dbpasswd"
    pass1=${DB_RET}
    #get password confirm
    set +e
    db_input high obm-conf/dbpasswd_verify
    if [ $? -eq $QUESTION_NOT_SHOWN_TO_USER ]; then
      break
    fi
    set -e
    db_go || true
    db_get obm-conf/dbpasswd_verify || true
    pass2="$RET"
    #test if password match
    
    if [ "${pass1}" = "${pass2}" ]; then
	have_app_pass="yes"
    else
        set +e
        db_input high obm-conf/passwords-do-not-match
        if [ $? -eq $QUESTION_NOT_SHOWN_TO_USER ]; then
          break
        fi
        set -e
        db_go || true
    fi
done

